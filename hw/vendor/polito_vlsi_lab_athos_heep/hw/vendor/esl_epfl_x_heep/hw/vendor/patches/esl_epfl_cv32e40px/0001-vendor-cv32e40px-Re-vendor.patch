diff --git a/rtl/cv32e40px_cs_registers.sv b/rtl/cv32e40px_cs_registers.sv
index 1f1d56b..cdc6433 100644
--- a/rtl/cv32e40px_cs_registers.sv
+++ b/rtl/cv32e40px_cs_registers.sv
@@ -1450,7 +1450,7 @@ module cv32e40px_cs_registers
       // minstret is located at index 2
       // Programable HPM counters start at index 3
       if ((cnt_gidx == 1) || (cnt_gidx >= (NUM_MHPMCOUNTERS + 3))) begin : gen_non_implemented
-        assign mhpmcounter_q[cnt_gidx] = 'b0;
+        always_ff @(posedge clk) mhpmcounter_q[cnt_gidx] <= 'b0;
       end else begin : gen_implemented
         always_ff @(posedge clk, negedge rst_n)
           if (!rst_n) begin
@@ -1478,10 +1478,10 @@ module cv32e40px_cs_registers
     for (evt_gidx = 0; evt_gidx < 32; evt_gidx++) begin : gen_mhpmevent
       // programable HPM events start at index3
       if ((evt_gidx < 3) || (evt_gidx >= (NUM_MHPMCOUNTERS + 3))) begin : gen_non_implemented
-        assign mhpmevent_q[evt_gidx] = 'b0;
+        always_ff @(posedge clk) mhpmevent_q[evt_gidx] <= 'b0;
       end else begin : gen_implemented
         if (NUM_HPM_EVENTS < 32) begin : gen_tie_off
-          assign mhpmevent_q[evt_gidx][31:NUM_HPM_EVENTS] = 'b0;
+          always_ff @(posedge clk) mhpmevent_q[evt_gidx][31:NUM_HPM_EVENTS] <= 'b0;
         end
         always_ff @(posedge clk, negedge rst_n)
           if (!rst_n) mhpmevent_q[evt_gidx][NUM_HPM_EVENTS-1:0] <= 'b0;
@@ -1499,7 +1499,7 @@ module cv32e40px_cs_registers
           (en_gidx == 1) ||
           (en_gidx >= (NUM_MHPMCOUNTERS+3) ) )
         begin : gen_non_implemented
-        assign mcounteren_q[en_gidx] = 'b0;
+        always_ff @(posedge clk) mcounteren_q[en_gidx] <= 'b0;
       end else begin : gen_implemented
         always_ff @(posedge clk, negedge rst_n)
           if (!rst_n) mcounteren_q[en_gidx] <= 'b0;  // default disable
@@ -1514,7 +1514,7 @@ module cv32e40px_cs_registers
   generate
     for (inh_gidx = 0; inh_gidx < 32; inh_gidx++) begin : gen_mcountinhibit
       if ((inh_gidx == 1) || (inh_gidx >= (NUM_MHPMCOUNTERS + 3))) begin : gen_non_implemented
-        assign mcountinhibit_q[inh_gidx] = 'b0;
+        always_ff @(posedge clk) mcountinhibit_q[inh_gidx] <= 'b0;
       end else begin : gen_implemented
         always_ff @(posedge clk, negedge rst_n)
           if (!rst_n) mcountinhibit_q[inh_gidx] <= 'b1;  // default disable
