// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package athos_ip_ctrl_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 3;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
    } c0;
    struct packed {
      logic        q;
    } c1;
    struct packed {
      logic        q;
    } c2;
    struct packed {
      logic        q;
    } c3;
    struct packed {
      logic        q;
    } c4;
    struct packed {
      logic        q;
    } c5;
    struct packed {
      logic        q;
    } c6;
    struct packed {
      logic        q;
    } c7;
    struct packed {
      logic        q;
    } c8;
    struct packed {
      logic        q;
    } c9;
    struct packed {
      logic [5:0]  q;
    } operation;
  } athos_ip_ctrl_reg2hw_ctrl_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } s0;
    struct packed {
      logic        d;
      logic        de;
    } s1;
    struct packed {
      logic        d;
      logic        de;
    } s2;
    struct packed {
      logic        d;
      logic        de;
    } s3;
    struct packed {
      logic        d;
      logic        de;
    } s4;
    struct packed {
      logic        d;
      logic        de;
    } s5;
    struct packed {
      logic        d;
      logic        de;
    } s6;
    struct packed {
      logic        d;
      logic        de;
    } s7;
    struct packed {
      logic        d;
      logic        de;
    } s8;
    struct packed {
      logic        d;
      logic        de;
    } s9;
  } athos_ip_ctrl_hw2reg_status_reg_t;

  // Register -> HW type
  typedef struct packed {
    athos_ip_ctrl_reg2hw_ctrl_reg_t ctrl; // [15:0]
  } athos_ip_ctrl_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    athos_ip_ctrl_hw2reg_status_reg_t status; // [19:0]
  } athos_ip_ctrl_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] ATHOS_IP_CTRL_CTRL_OFFSET = 3'h 0;
  parameter logic [BlockAw-1:0] ATHOS_IP_CTRL_STATUS_OFFSET = 3'h 4;

  // Register index
  typedef enum int {
    ATHOS_IP_CTRL_CTRL,
    ATHOS_IP_CTRL_STATUS
  } athos_ip_ctrl_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] ATHOS_IP_CTRL_PERMIT [2] = '{
    4'b 0011, // index[0] ATHOS_IP_CTRL_CTRL
    4'b 0011  // index[1] ATHOS_IP_CTRL_STATUS
  };

endpackage

